{
  "metadata" :
  {
    "@generated" : true
  },
  "models" :
  [
    {
      "issues" :
      [
        {
          "callee" : "LFlow;.into_sink:(LData;)V",
          "position" :
          {
            "line" : 3,
            "path" : "Flow.java"
          },
          "rule" : 1,
          "sink_index" : "0",
          "sinks" :
          [
            {
              "call_info" :
              {
                "call_kind" : "CallSite",
                "port" : "Argument(1)",
                "position" :
                {
                  "line" : 3,
                  "path" : "Flow.java"
                },
                "resolves_to" : "LFlow;.into_sink:(LData;)V"
              },
              "kinds" :
              [
                {
                  "callee_interval" :
                  [
                    5,
                    6
                  ],
                  "distance" : 1,
                  "kind" : "TestSink",
                  "origins" :
                  [
                    {
                      "method" : "LSink;.sink:(LData;)V",
                      "port" : "Argument(1)"
                    }
                  ],
                  "preserves_type_context" : false
                }
              ]
            }
          ],
          "sources" :
          [
            {
              "call_info" :
              {
                "call_kind" : "Origin",
                "port" : "Return",
                "position" :
                {
                  "line" : 1,
                  "path" : "Flow.java"
                }
              },
              "kinds" :
              [
                {
                  "callee_interval" :
                  [
                    5,
                    6
                  ],
                  "kind" : "TestSource",
                  "origins" :
                  [
                    {
                      "method" : "LSource;.source:()LData;",
                      "port" : "Return"
                    }
                  ],
                  "preserves_type_context" : true
                }
              ]
            }
          ]
        }
      ],
      "method" : "LFlow;.indirect:()V",
      "position" :
      {
        "line" : 0,
        "path" : "Flow.java"
      }
    },
    {
      "method" : "LFlow;.into_sink:(LData;)V",
      "position" :
      {
        "line" : 0,
        "path" : "Flow.java"
      },
      "sinks" :
      [
        {
          "port" : "Argument(1)",
          "taint" :
          [
            {
              "call_info" :
              {
                "call_kind" : "Origin",
                "port" : "Argument(1)",
                "position" :
                {
                  "line" : 1,
                  "path" : "Flow.java"
                }
              },
              "kinds" :
              [
                {
                  "callee_interval" :
                  [
                    5,
                    6
                  ],
                  "kind" : "TestSink",
                  "origins" :
                  [
                    {
                      "method" : "LSink;.sink:(LData;)V",
                      "port" : "Argument(1)"
                    }
                  ],
                  "preserves_type_context" : true
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "inline_as_getter" : "Argument(1)",
      "method" : "LFlow;.propagation:(LData;)LData;",
      "position" :
      {
        "line" : 0,
        "path" : "Flow.java"
      },
      "propagation" :
      [
        {
          "input" : "Argument(1)",
          "output" :
          [
            {
              "call_info" :
              {
                "call_kind" : "Propagation",
                "port" : "Return"
              },
              "kinds" :
              [
                {
                  "kind" : "LocalReturn",
                  "output_paths" :
                  {
                    "" : 4
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
